# Generated by Django 3.0.3 on 2020-04-28 13:56

from django.db import migrations, models
import django.db.models.deletion
import gameweek.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ('player', '0001_initial'),
        ('team', '0001_initial'),
        ('rule', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('entry_fee', models.DecimalField(decimal_places=2, max_digits=10)),
                ('_hidden', models.BooleanField(default=False)),
                ('available', models.BooleanField(default=False)),
                ('public_game', models.BooleanField(default=True)),
                ('created_by',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_created_by',
                                   to='player.Player')),
                ('matches',
                 models.ManyToManyField(blank=True, null=True, related_name='games', related_query_name='game',
                                        to='team.Match')),
                ('owned_by',
                 models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='games_owned_by',
                                   to='player.Player')),
                ('rules', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='rule.Rule')),
            ],
            options={
                'ordering': ('-start_date',),
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('home_score', models.IntegerField(blank=True, default=0, null=True)),
                ('away_score', models.IntegerField(blank=True, default=0, null=True)),
                ('joker', models.BooleanField(default=False)),
                ('submit_date_time', models.DateTimeField(auto_now=True)),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions',
                                           related_query_name='prediction', to='gameweek.Game')),
                ('match', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='team.Match')),
                ('player', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Player')),
            ],
        ),
        migrations.CreateModel(
            name='League',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('pword', models.CharField(default=gameweek.models.randomised_password, max_length=100)),
                ('is_private', models.BooleanField(default=False)),
                ('member_can_add', models.BooleanField(default=False, verbose_name='Members can add games')),
                ('games', models.ManyToManyField(blank=True, related_name='leagues_included_in',
                                                 related_query_name='included_in_league', to='gameweek.Game')),
                ('members', models.ManyToManyField(blank=True, related_name='leagues_member_of',
                                                   related_query_name='member_of_league', to='player.Player')),
                ('owned_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='player.Player')),
            ],
        ),
    ]
